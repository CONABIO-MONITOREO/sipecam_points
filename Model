// Creating tables
Table users as U {
  id int [pk, increment] // auto-increment
  created_at timestamp
	password varchar 
	last_login timestampt
	is_superuser bool 
	username varchar 
	first_name varchar 
	last_name varchar
	email varchar 
	is_staff boolean 
	is_active boolean 
	date_joined timestampt
	comments varchar
  role int
}


Table Node as N {
  id int [pk, increment] // auto-increment
  has_parnet boolean
	ecosystem_id int
	cumululus_id int
	partner_id int
	id_sipe varchar  //?
  fid int
  latitude float8
  longitud float8
	altitude int4 
	cat_itegr varchar 
	anpmarcelo boolean //?
	by_fauna int4 
	coordsx1 varchar 
	coordsx2 varchar 
  point geometry
}

Table Ecosystem as E {
  id int [pk, increment] // auto-increment
  node_id int
  name varchar [not null, unique]
  created_at timestamp
}

Table Cumulus as C {
  id int [pk, increment] // auto-increment
  name varchar
  node_id int
  created_at timestamp
  polygon geometry
}

Table Cumulus_criteria as CC {
  id int [pk, increment] // auto-increment
  cumulus_id int
  name varchar
  
  created_at timestamp
}


Table Partner as P {
  id int [pk, increment] // auto-increment
  node_id int
  institution varchar
	address varchar
	firstname varchar
	lastname varchar
	email varchar
	phone_number varchar
	comments varchar
	grade varchar 
  created_at timestamp
}

Ref: N.(id) - E.(node_id)
Ref: N.(id) - C.(node_id)
Ref: N.(id) - P.(node_id)
Ref: N.(id) - D.(node_id)
Ref: N.(id) - V.(node_id)
Ref: C.(id) - CC.(cumulus_id)

Table Monitors as M {
  id int [pk, increment] // auto-increment
  first_name varchar
  last_name varchar
  phone_number int
  email varchar
  
  created_at timestamp
}
Table Visits as V {
  id int [pk, increment] // auto-increment
  node_id int
  full_name varchar
  created_at timestamp
}



Table Role as R {
  id int [pk, increment] // auto-increment
  permission_id int
  roles varchar
}



Table Devices as D {
  id int [pk, increment] // auto-increment
  node_id int
  serial varchar
  brand varchar
  type varchar
  model varchar
}

Table Calendar as Cal {
  id int [pk, increment] // auto-increment

}

Table Permissions as Per {
  id int [pk, increment] // auto-increment
  role_id int
  edit boolean
  write boolean
  create boolean
}


Ref: R.id > Per.id
Ref: U.role < R.id
Ref: M.id > P.(id)
Ref: P.id - C.(id)
